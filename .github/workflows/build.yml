name: Build

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]
  merge_group:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "zulu"
          cache: "maven"
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Create .env file
        run: cp sample.env .env

      - name: Setup Services
        run: |
          docker compose -f docker-compose.yml up -d

          echo "Waiting for services to be ready..."
          timeout=180
          elapsed=0
          while [ $elapsed -lt $timeout ]; do
            if docker compose ps | grep -q "healthy"; then
              echo "All services are ready"
              break
            fi
            echo "Waiting for health check... ${elapsed}s/${timeout}s"
            sleep 10
            elapsed=$((elapsed + 10))
          done

          if [ $elapsed -ge $timeout ]; then
            echo "Services startup timeout!"
            docker compose logs
            exit 1
          fi

      - name: Build with Maven
        env:
          KOTLIN_POST_PROCESS_FILE: python3 ${{ github.workspace }}/scripts/fix_kotlin_defaults.py
        run: ./mvnw install

      - name: Check uncommitted changes to ensure format applied
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git status
            echo "There are uncommitted changes. Please run './mvnw spotless:apply' and commit the changes."
            exit 1
          else
            echo "No uncommitted changes."
          fi

      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: target/*.jar

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: target/site/jacoco
