/*
 *  Description: This file is generated by IDEA in order to provide access
 *               to the material_bundle table in the legacy service.
 *
 *  Author(s):
 *      Nictheboy Li    <nictheboy@outlook.com>
 *
 */

/*
 * DO NOT MODIFY THIS FILE
 *
 * Since cheese-backend is migrating from NestJS to Spring Boot,
 * some modules are still implemented in https://github.com/SageSeekerSociety/cheese-backend
 *
 * However, some tables are shared between the two implementations.
 * This file is one of them.
 *
 * The original project has an independent database schema, so if you modify this file,
 * the original project may not work properly.
 *
 */

/*
 * For the same reason, we recommend you take these tables as read-only,
 * that means, do not do any write operations (INSERT, UPDATE, DELETE) to these tables.
 *
 * We expect these tables to be maintained by the original project,
 * until we decide to fully migrate to Spring Boot.
 *
 */

package org.rucca.cheese.material

import jakarta.persistence.*
import java.time.OffsetDateTime
import org.hibernate.annotations.ColumnDefault
import org.hibernate.annotations.OnDelete
import org.hibernate.annotations.OnDeleteAction
import org.rucca.cheese.common.persistent.IdType
import org.rucca.cheese.user.User
import org.springframework.data.jpa.repository.JpaRepository

@Entity
@Table(name = "material_bundle")
open class MaterialBundle {
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "material_bundle_id_gen")
    @SequenceGenerator(
        name = "material_bundle_id_gen",
        sequenceName = "material_bundle_id_seq",
        allocationSize = 1,
    )
    @Column(name = "id", nullable = false)
    open var id: Int? = null

    @Column(name = "title", nullable = false, length = Integer.MAX_VALUE)
    open var title: String? = null

    @Column(name = "content", nullable = false, length = Integer.MAX_VALUE)
    open var content: String? = null

    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @OnDelete(action = OnDeleteAction.RESTRICT)
    @JoinColumn(name = "creator_id", nullable = false)
    open var creator: User? = null

    @ColumnDefault("CURRENT_TIMESTAMP")
    @Column(name = "created_at", nullable = false)
    open var createdAt: OffsetDateTime? = null

    @Column(name = "updated_at", nullable = false) open var updatedAt: OffsetDateTime? = null

    @ColumnDefault("0") @Column(name = "rating", nullable = false) open var rating: Double? = null

    @ColumnDefault("0")
    @Column(name = "rating_count", nullable = false)
    open var ratingCount: Int? = null

    @Column(name = "my_rating") open var myRating: Double? = null

    @ColumnDefault("0")
    @Column(name = "comments_count", nullable = false)
    open var commentsCount: Int? = null
}

interface MaterialBundleRepository : JpaRepository<MaterialBundle, IdType> {}
